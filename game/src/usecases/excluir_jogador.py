from rich.console import Console
from rich.table import Table
from database import obter_cursor

def listar_jogadores_para_exclusao(console):
    """Lista todos os jogadores dispon√≠veis para exclus√£o"""
    try:
        with obter_cursor() as cursor:
            cursor.execute("SELECT id_jogador, nome FROM jogador ORDER BY nome;")
            jogadores = cursor.fetchall()
            
            if not jogadores:
                console.print("[yellow]‚ö† Nenhum jogador encontrado no banco de dados.[/yellow]")
                return []
            
            # Criar tabela visual dos jogadores
            tabela = Table(title="üìã Jogadores Dispon√≠veis para Exclus√£o")
            tabela.add_column("ID", style="cyan", no_wrap=True)
            tabela.add_column("Nome", style="magenta")
            
            for jogador in jogadores:
                tabela.add_row(str(jogador[0]), jogador[1])
            
            console.print(tabela)
            return jogadores
            
    except Exception as e:
        console.print(f"[red]‚ùå Erro ao listar jogadores: {e}[/red]")
        return []

def excluir_jogador(console):
    """Exclui um jogador usando a procedure segura"""
    console.print("\n[bold red]üóëÔ∏è EXCLUIR JOGADOR[/bold red]")
    console.print("[yellow]‚ö†Ô∏è ATEN√á√ÉO: Esta opera√ß√£o ir√° excluir PERMANENTEMENTE o jogador e TODOS os seus dados (partidas, cartas, combates, etc.)[/yellow]")
    
    # Listar jogadores dispon√≠veis
    jogadores = listar_jogadores_para_exclusao(console)
    if not jogadores:
        return
    
    # Solicitar ID do jogador
    try:
        id_jogador = input("\nüéØ Digite o ID do jogador que deseja excluir (ou 'cancelar' para voltar): ").strip()
        
        if id_jogador.lower() in ['cancelar', 'c', '']:
            console.print("[blue]üîô Opera√ß√£o cancelada.[/blue]")
            return
        
        id_jogador = int(id_jogador)
        
        # Verificar se o ID existe na lista
        jogador_encontrado = None
        for jogador in jogadores:
            if jogador[0] == id_jogador:
                jogador_encontrado = jogador
                break
        
        if not jogador_encontrado:
            console.print(f"[red]‚ùå Jogador com ID {id_jogador} n√£o encontrado.[/red]")
            return
        
        # Confirma√ß√£o final
        nome_jogador = jogador_encontrado[1]
        console.print(f"\n[bold red]‚ö†Ô∏è CONFIRMA√á√ÉO FINAL ‚ö†Ô∏è[/bold red]")
        console.print(f"Voc√™ est√° prestes a excluir permanentemente:")
        console.print(f"üéÆ Jogador: [bold]{nome_jogador}[/bold] (ID: {id_jogador})")
        console.print(f"üìä Todas as partidas associadas")
        console.print(f"üÉè Todas as cartas das partidas")
        console.print(f"‚öîÔ∏è Todos os combates realizados")
        console.print(f"‚ú® Todos os poderes utilizados")
        
        confirmacao = input(f"\nDigite 'CONFIRMAR' para excluir o jogador {nome_jogador}: ").strip()
        
        if confirmacao != 'CONFIRMAR':
            console.print("[blue]üîô Opera√ß√£o cancelada. Nenhum dado foi exclu√≠do.[/blue]")
            return
        
        # Executar a procedure segura
        with obter_cursor() as cursor:
            cursor.execute("CALL excluir_jogador_completo(%s);", (id_jogador,))
                        
        console.print(f"[bold green]‚úÖ Jogador '{nome_jogador}' foi exclu√≠do com sucesso![/bold green]")
        console.print("[green]üõ°Ô∏è Todos os dados relacionados foram removidos de forma segura.[/green]")
        
    except ValueError:
        console.print("[red]‚ùå ID inv√°lido. Digite apenas n√∫meros.[/red]")
    except Exception as e:
        console.print(f"[red]‚ùå Erro ao excluir jogador: {e}[/red]")
